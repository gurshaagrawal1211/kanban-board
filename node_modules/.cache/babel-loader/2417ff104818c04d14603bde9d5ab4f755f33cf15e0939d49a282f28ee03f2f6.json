{"ast":null,"code":"var _jsxFileName = \"D:\\\\kanban-board\\\\src\\\\components\\\\KanbanBoard\\\\KanbanBoard.jsx\",\n  _s = $RefreshSig$();\n// KanbanBoard.js\nimport React, { useContext } from 'react';\n// import KanbanColumn from './KanbanColumn';\nimport KanbanColumn from '../KanbanColumn/KanbanColumn';\nimport '../KanbanBoard/KanbanBoard.css';\nimport { KanbanContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = () => {\n  _s();\n  const {\n    data,\n    groupingOption,\n    sortingOption\n  } = useContext(KanbanContext);\n  const {\n    tickets,\n    users\n  } = data;\n  console.log(groupingOption);\n  // Implement logic to group and sort tickets based on options\n  const groupAndSortTickets = () => {\n    // Group tickets based on the current grouping option\n    const groupedTickets = tickets.reduce((grouped, ticket) => {\n      const groupKey = ticket[groupingOption];\n      grouped[groupKey] = grouped[groupKey] || [];\n      grouped[groupKey].push(ticket);\n      return grouped;\n    }, {});\n\n    // Sort tickets within each group based on the current sorting option\n    Object.keys(groupedTickets).forEach(groupKey => {\n      const group = groupedTickets[groupKey];\n      group.sort((a, b) => b.priority - a.priority); // Sort by priority in descending order\n    });\n\n    return groupedTickets;\n  };\n\n  // Get the grouped and sorted tickets based on the current options\n  const groupedAndSortedTickets = groupAndSortTickets();\n  const todoTickets = tickets.filter(ticket => ticket.status === 'Todo');\n  const inProgressTickets = tickets.filter(ticket => ticket.status === 'In progress');\n  const doneTickets = tickets.filter(ticket => ticket.status === 'Done');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: Object.entries(groupedAndSortedTickets).map(([groupTitle, groupTickets]) => /*#__PURE__*/_jsxDEV(KanbanColumn, {\n      title: groupTitle,\n      tickets: groupTickets,\n      users: users\n    }, groupTitle, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"7QTZ3dXr4f1zjCB7sX01g6LbC4I=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useContext","KanbanColumn","KanbanContext","jsxDEV","_jsxDEV","KanbanBoard","_s","data","groupingOption","sortingOption","tickets","users","console","log","groupAndSortTickets","groupedTickets","reduce","grouped","ticket","groupKey","push","Object","keys","forEach","group","sort","a","b","priority","groupedAndSortedTickets","todoTickets","filter","status","inProgressTickets","doneTickets","className","children","entries","map","groupTitle","groupTickets","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/kanban-board/src/components/KanbanBoard/KanbanBoard.jsx"],"sourcesContent":["// KanbanBoard.js\r\nimport React, { useContext } from 'react';\r\n// import KanbanColumn from './KanbanColumn';\r\nimport KanbanColumn from '../KanbanColumn/KanbanColumn';\r\nimport '../KanbanBoard/KanbanBoard.css'\r\n\r\n\r\nimport { KanbanContext } from '../../App';\r\n\r\nconst KanbanBoard = () => {\r\n  const { data, groupingOption, sortingOption } = useContext(KanbanContext);\r\n  const { tickets, users } = data;\r\n\r\n  console.log(groupingOption)\r\n  // Implement logic to group and sort tickets based on options\r\n  const groupAndSortTickets = () => {\r\n    // Group tickets based on the current grouping option\r\n    const groupedTickets = tickets.reduce((grouped, ticket) => {\r\n      const groupKey = ticket[groupingOption];\r\n      grouped[groupKey] = grouped[groupKey] || [];\r\n      grouped[groupKey].push(ticket);\r\n      return grouped;\r\n    }, {});\r\n\r\n    // Sort tickets within each group based on the current sorting option\r\n    Object.keys(groupedTickets).forEach((groupKey) => {\r\n      const group = groupedTickets[groupKey];\r\n      group.sort((a, b) => b.priority - a.priority); // Sort by priority in descending order\r\n    });\r\n\r\n    return groupedTickets;\r\n  };\r\n\r\n  // Get the grouped and sorted tickets based on the current options\r\n  const groupedAndSortedTickets = groupAndSortTickets();\r\n\r\n  \r\n  const todoTickets = tickets.filter((ticket) => ticket.status === 'Todo');\r\n  const inProgressTickets = tickets.filter((ticket) => ticket.status === 'In progress');\r\n  const doneTickets = tickets.filter((ticket) => ticket.status === 'Done');\r\n  return (\r\n    <div className=\"kanban-board\">\r\n      {/* Render columns based on grouped and sorted tickets */}\r\n      {Object.entries(groupedAndSortedTickets).map(([groupTitle, groupTickets]) => (\r\n        <KanbanColumn key={groupTitle} title={groupTitle} tickets={groupTickets} users={users} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanBoard;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC;AACA,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAO,gCAAgC;AAGvC,SAASC,aAAa,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC,IAAI;IAAEC,cAAc;IAAEC;EAAc,CAAC,GAAGT,UAAU,CAACE,aAAa,CAAC;EACzE,MAAM;IAAEQ,OAAO;IAAEC;EAAM,CAAC,GAAGJ,IAAI;EAE/BK,OAAO,CAACC,GAAG,CAACL,cAAc,CAAC;EAC3B;EACA,MAAMM,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACA,MAAMC,cAAc,GAAGL,OAAO,CAACM,MAAM,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACzD,MAAMC,QAAQ,GAAGD,MAAM,CAACV,cAAc,CAAC;MACvCS,OAAO,CAACE,QAAQ,CAAC,GAAGF,OAAO,CAACE,QAAQ,CAAC,IAAI,EAAE;MAC3CF,OAAO,CAACE,QAAQ,CAAC,CAACC,IAAI,CAACF,MAAM,CAAC;MAC9B,OAAOD,OAAO;IAChB,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEN;IACAI,MAAM,CAACC,IAAI,CAACP,cAAc,CAAC,CAACQ,OAAO,CAAEJ,QAAQ,IAAK;MAChD,MAAMK,KAAK,GAAGT,cAAc,CAACI,QAAQ,CAAC;MACtCK,KAAK,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,QAAQ,GAAGF,CAAC,CAACE,QAAQ,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC;;IAEF,OAAOb,cAAc;EACvB,CAAC;;EAED;EACA,MAAMc,uBAAuB,GAAGf,mBAAmB,CAAC,CAAC;EAGrD,MAAMgB,WAAW,GAAGpB,OAAO,CAACqB,MAAM,CAAEb,MAAM,IAAKA,MAAM,CAACc,MAAM,KAAK,MAAM,CAAC;EACxE,MAAMC,iBAAiB,GAAGvB,OAAO,CAACqB,MAAM,CAAEb,MAAM,IAAKA,MAAM,CAACc,MAAM,KAAK,aAAa,CAAC;EACrF,MAAME,WAAW,GAAGxB,OAAO,CAACqB,MAAM,CAAEb,MAAM,IAAKA,MAAM,CAACc,MAAM,KAAK,MAAM,CAAC;EACxE,oBACE5B,OAAA;IAAK+B,SAAS,EAAC,cAAc;IAAAC,QAAA,EAE1Bf,MAAM,CAACgB,OAAO,CAACR,uBAAuB,CAAC,CAACS,GAAG,CAAC,CAAC,CAACC,UAAU,EAAEC,YAAY,CAAC,kBACtEpC,OAAA,CAACH,YAAY;MAAkBwC,KAAK,EAAEF,UAAW;MAAC7B,OAAO,EAAE8B,YAAa;MAAC7B,KAAK,EAAEA;IAAM,GAAnE4B,UAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2D,CACzF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACvC,EAAA,CAvCID,WAAW;AAAAyC,EAAA,GAAXzC,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}