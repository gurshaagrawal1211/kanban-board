{"ast":null,"code":"var _jsxFileName = \"D:\\\\kanban-board\\\\src\\\\components\\\\DisplayButton\\\\DisplayButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { KanbanContext } from '../../App';\nimport '../DisplayButton/displayButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayButton = () => {\n  _s();\n  const {\n    groupingOption,\n    setGroupingOption,\n    displayOption,\n    setDisplayOption,\n    statusOptions\n  } = React.useContext(KanbanContext);\n  const [selectedStatus, setSelectedStatus] = useState(displayOption || statusOptions[0]);\n  const handleGroupingChange = event => {\n    setGroupingOption(event.target.value);\n  };\n  const handleDisplayChange = event => {\n    setDisplayOption(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display-button\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Group By:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: groupingOption,\n      onChange: handleGroupingChange,\n      children: /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"status\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Display:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), groupingOption === 'status' && /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedStatus,\n      onChange: handleDisplayChange,\n      children: statusOptions.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: status,\n        children: status\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(DisplayButton, \"0SHVwYINY3CF1p/4sCX85f0dxV4=\");\n_c = DisplayButton;\nexport default DisplayButton;\nvar _c;\n$RefreshReg$(_c, \"DisplayButton\");","map":{"version":3,"names":["React","useState","KanbanContext","jsxDEV","_jsxDEV","DisplayButton","_s","groupingOption","setGroupingOption","displayOption","setDisplayOption","statusOptions","useContext","selectedStatus","setSelectedStatus","handleGroupingChange","event","target","value","handleDisplayChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","status","_c","$RefreshReg$"],"sources":["D:/kanban-board/src/components/DisplayButton/DisplayButton.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { KanbanContext } from '../../App';\r\nimport '../DisplayButton/displayButton.css'\r\n\r\nconst DisplayButton = () => {\r\n  const { groupingOption, setGroupingOption, displayOption, setDisplayOption, statusOptions } = React.useContext(KanbanContext);\r\n  const [selectedStatus, setSelectedStatus] = useState(displayOption || statusOptions[0]);\r\n\r\n  const handleGroupingChange = (event) => {\r\n    setGroupingOption(event.target.value);\r\n  };\r\n\r\n  const handleDisplayChange = (event) => {\r\n    setDisplayOption(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"display-button\">\r\n      <label>Group By:</label>\r\n      <select value={groupingOption} onChange={handleGroupingChange}>\r\n        <option value=\"status\">Status</option>\r\n        {/* Add other grouping options here */}\r\n      </select>\r\n\r\n      <label>Display:</label>\r\n      {groupingOption === 'status' && (\r\n        <select value={selectedStatus} onChange={handleDisplayChange}>\r\n          {statusOptions.map((status) => (\r\n            <option key={status} value={status}>\r\n              {status}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      )}\r\n      {/* Add display options for other grouping options here */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,WAAW;AACzC,OAAO,oCAAoC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC,cAAc;IAAEC,iBAAiB;IAAEC,aAAa;IAAEC,gBAAgB;IAAEC;EAAc,CAAC,GAAGX,KAAK,CAACY,UAAU,CAACV,aAAa,CAAC;EAC7H,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAACQ,aAAa,IAAIE,aAAa,CAAC,CAAC,CAAC,CAAC;EAEvF,MAAMI,oBAAoB,GAAIC,KAAK,IAAK;IACtCR,iBAAiB,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAED,MAAMC,mBAAmB,GAAIH,KAAK,IAAK;IACrCN,gBAAgB,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EAED,oBACEd,OAAA;IAAKgB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BjB,OAAA;MAAAiB,QAAA,EAAO;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxBrB,OAAA;MAAQc,KAAK,EAAEX,cAAe;MAACmB,QAAQ,EAAEX,oBAAqB;MAAAM,QAAA,eAC5DjB,OAAA;QAAQc,KAAK,EAAC,QAAQ;QAAAG,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhC,CAAC,eAETrB,OAAA;MAAAiB,QAAA,EAAO;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EACtBlB,cAAc,KAAK,QAAQ,iBAC1BH,OAAA;MAAQc,KAAK,EAAEL,cAAe;MAACa,QAAQ,EAAEP,mBAAoB;MAAAE,QAAA,EAC1DV,aAAa,CAACgB,GAAG,CAAEC,MAAM,iBACxBxB,OAAA;QAAqBc,KAAK,EAAEU,MAAO;QAAAP,QAAA,EAChCO;MAAM,GADIA,MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEV,CAAC;AAACnB,EAAA,CAjCID,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAmCnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}