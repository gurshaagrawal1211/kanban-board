{"ast":null,"code":"var _jsxFileName = \"D:\\\\kanban-board\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect, createContext, useContext } from 'react';\n// import KanbanBoard from './KanbanBoard';\nimport KanbanBoard from './components/KarbanBoard/KarbanBoard';\nimport './App.css';\n\n// const KanbanContext = createContext();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState({\n    tickets: [],\n    users: []\n  });\n  const [groupingOption, setGroupingOption] = useState('status');\n  const [sortingOption, setSortingOption] = useState('priority');\n  useEffect(() => {\n    // Fetch data from the API and setData\n    // This is a placeholder, you should replace it with your actual API call\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment ');\n        const jsonData = await response.json();\n        setData(jsonData);\n        console.log(jsonData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const contextValue = {\n    data,\n    groupingOption,\n    setGroupingOption,\n    sortingOption,\n    setSortingOption\n  };\n  return (\n    /*#__PURE__*/\n    // <KanbanContext.Provider value={contextValue}>\n    //   <div className=\"app\">\n    //     <header>\n    //       <button>Display</button>\n    //     </header>\n    //     {/* <KanbanBoard /> */}\n    //   </div>\n    // </KanbanContext.Provider>\n    _jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(App, \"zwd0GidJr144jX/QoPYdPf13+Ig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","KanbanBoard","jsxDEV","_jsxDEV","App","_s","data","setData","tickets","users","groupingOption","setGroupingOption","sortingOption","setSortingOption","fetchData","response","fetch","jsonData","json","console","log","error","contextValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/kanban-board/src/App.jsx"],"sourcesContent":["// App.js\nimport React, { useState, useEffect, createContext, useContext } from 'react';\n// import KanbanBoard from './KanbanBoard';\nimport KanbanBoard from './components/KarbanBoard/KarbanBoard';\nimport './App.css';\n\n// const KanbanContext = createContext();\n\nconst App = () => {\n  const [data, setData] = useState({\n    tickets: [],\n    users: [],\n  });\n  const [groupingOption, setGroupingOption] = useState('status');\n  const [sortingOption, setSortingOption] = useState('priority');\n\n  useEffect(() => {\n    // Fetch data from the API and setData\n    // This is a placeholder, you should replace it with your actual API call\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment ');\n        const jsonData = await response.json();\n        setData(jsonData);\n        console.log(jsonData)\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const contextValue = {\n    data,\n    groupingOption,\n    setGroupingOption,\n    sortingOption,\n    setSortingOption,\n  };\n\n  return (\n    // <KanbanContext.Provider value={contextValue}>\n    //   <div className=\"app\">\n    //     <header>\n    //       <button>Display</button>\n    //     </header>\n    //     {/* <KanbanBoard /> */}\n    //   </div>\n    // </KanbanContext.Provider>\n    <div className=\"app\">\n        <header>\n          <button>Display</button>\n        </header>\n        {/* <KanbanBoard /> */}\n      </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAC7E;AACA,OAAOC,WAAW,MAAM,sCAAsC;AAC9D,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAC/BW,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,QAAQ,CAAC;EAC9D,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,UAAU,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2DAA2D,CAAC;QACzF,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACtCX,OAAO,CAACU,QAAQ,CAAC;QACjBE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,YAAY,GAAG;IACnBhB,IAAI;IACJI,cAAc;IACdC,iBAAiB;IACjBC,aAAa;IACbC;EACF,CAAC;EAED;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAV,OAAA;MAAKoB,SAAS,EAAC,KAAK;MAAAC,QAAA,eAChBrB,OAAA;QAAAqB,QAAA,eACErB,OAAA;UAAAqB,QAAA,EAAQ;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN;EAAC;AAEZ,CAAC;AAACvB,EAAA,CAjDID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAmDT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}