{"ast":null,"code":"var _jsxFileName = \"D:\\\\kanban-board\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect, createContext, useContext } from 'react';\n// import KanbanBoard from './KanbanBoard';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanContext = /*#__PURE__*/createContext();\nconst App = () => {\n  _s();\n  const [data, setData] = useState({\n    tickets: [],\n    users: []\n  });\n  const [groupingOption, setGroupingOption] = useState('status');\n  const [sortingOption, setSortingOption] = useState('priority');\n  useEffect(() => {\n    // Fetch data from the API and setData\n    // This is a placeholder, you should replace it with your actual API call\n    const fetchData = async () => {\n      try {\n        const response = await fetch('your_api_endpoint');\n        const jsonData = await response.json();\n        setData(jsonData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const contextValue = {\n    data,\n    groupingOption,\n    setGroupingOption,\n    sortingOption,\n    setSortingOption\n  };\n  return /*#__PURE__*/_jsxDEV(KanbanContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KanbanBoard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"zwd0GidJr144jX/QoPYdPf13+Ig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","jsxDEV","_jsxDEV","KanbanContext","App","_s","data","setData","tickets","users","groupingOption","setGroupingOption","sortingOption","setSortingOption","fetchData","response","fetch","jsonData","json","error","console","contextValue","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","KanbanBoard","_c","$RefreshReg$"],"sources":["D:/kanban-board/src/App.jsx"],"sourcesContent":["// App.js\nimport React, { useState, useEffect, createContext, useContext } from 'react';\n// import KanbanBoard from './KanbanBoard';\nimport './App.css';\n\nconst KanbanContext = createContext();\n\nconst App = () => {\n  const [data, setData] = useState({\n    tickets: [],\n    users: [],\n  });\n  const [groupingOption, setGroupingOption] = useState('status');\n  const [sortingOption, setSortingOption] = useState('priority');\n\n  useEffect(() => {\n    // Fetch data from the API and setData\n    // This is a placeholder, you should replace it with your actual API call\n    const fetchData = async () => {\n      try {\n        const response = await fetch('your_api_endpoint');\n        const jsonData = await response.json();\n        setData(jsonData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const contextValue = {\n    data,\n    groupingOption,\n    setGroupingOption,\n    sortingOption,\n    setSortingOption,\n  };\n\n  return (\n    <KanbanContext.Provider value={contextValue}>\n      <div className=\"app\">\n        <header>\n          <button>Display</button>\n        </header>\n        <KanbanBoard />\n      </div>\n    </KanbanContext.Provider>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAC7E;AACA,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,aAAa,gBAAGJ,aAAa,CAAC,CAAC;AAErC,MAAMK,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAC/BW,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,QAAQ,CAAC;EAC9D,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,UAAU,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,CAAC;QACjD,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACtCX,OAAO,CAACU,QAAQ,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,YAAY,GAAG;IACnBf,IAAI;IACJI,cAAc;IACdC,iBAAiB;IACjBC,aAAa;IACbC;EACF,CAAC;EAED,oBACEX,OAAA,CAACC,aAAa,CAACmB,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,eAC1CtB,OAAA;MAAKuB,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBtB,OAAA;QAAAsB,QAAA,eACEtB,OAAA;UAAAsB,QAAA,EAAQ;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACT3B,OAAA,CAAC4B,WAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAE7B,CAAC;AAACxB,EAAA,CA1CID,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA4CT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}