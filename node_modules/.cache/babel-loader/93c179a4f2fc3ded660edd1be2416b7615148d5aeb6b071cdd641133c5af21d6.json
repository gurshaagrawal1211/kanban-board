{"ast":null,"code":"var _jsxFileName = \"D:\\\\kanban-board\\\\src\\\\components\\\\KanbanBoard\\\\KanbanBoard.jsx\",\n  _s = $RefreshSig$();\n// KanbanBoard.js\nimport React, { useContext } from 'react';\n// import KanbanColumn from './KanbanColumn';\nimport KanbanColumn from '../KanbanColumn/KanbanColumn';\nimport '../KanbanBoard/KanbanBoard.css';\nimport { KanbanContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = () => {\n  _s();\n  const {\n    data,\n    groupingOption,\n    sortingOption\n  } = useContext(KanbanContext);\n  const {\n    tickets,\n    users\n  } = data;\n  console.log(groupingOption);\n  // Implement logic to group and sort tickets based on options\n  const sortTickets = ticketsToSort => {\n    switch (sortingOption) {\n      case 'status':\n        // Group by status\n        return tickets.reduce((groupedTickets, ticket) => {\n          const status = ticket.status;\n          groupedTickets[status] = groupedTickets[status] || [];\n          groupedTickets[status].push(ticket);\n          return groupedTickets;\n        }, {});\n      case 'user':\n        // Group by user\n        return tickets.reduce((groupedTickets, ticket) => {\n          const userId = ticket.userId;\n          groupedTickets[userId] = groupedTickets[userId] || [];\n          groupedTickets[userId].push(ticket);\n          return groupedTickets;\n        }, {});\n      case 'priority':\n        // Group by priority\n        return ticketsToSort.sort((a, b) => b.priority - a.priority);\n      default:\n        return ticketsToSort;\n      // Default to an empty object if no valid grouping option\n    }\n  };\n\n  // Get the grouped tickets based on the current grouping option\n  const sortedTickets = sortTickets(tickets);\n  const todoTickets = tickets.filter(ticket => ticket.status === 'Todo');\n  const inProgressTickets = tickets.filter(ticket => ticket.status === 'In progress');\n  const doneTickets = tickets.filter(ticket => ticket.status === 'Done');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: Object.entries(groupedTickets).map(([groupTitle, groupTickets]) => /*#__PURE__*/_jsxDEV(KanbanColumn, {\n      title: groupTitle,\n      tickets: groupTickets,\n      users: users\n    }, groupTitle, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"7QTZ3dXr4f1zjCB7sX01g6LbC4I=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useContext","KanbanColumn","KanbanContext","jsxDEV","_jsxDEV","KanbanBoard","_s","data","groupingOption","sortingOption","tickets","users","console","log","sortTickets","ticketsToSort","reduce","groupedTickets","ticket","status","push","userId","sort","a","b","priority","sortedTickets","todoTickets","filter","inProgressTickets","doneTickets","className","children","Object","entries","map","groupTitle","groupTickets","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/kanban-board/src/components/KanbanBoard/KanbanBoard.jsx"],"sourcesContent":["// KanbanBoard.js\r\nimport React, { useContext } from 'react';\r\n// import KanbanColumn from './KanbanColumn';\r\nimport KanbanColumn from '../KanbanColumn/KanbanColumn';\r\nimport '../KanbanBoard/KanbanBoard.css'\r\n\r\n\r\nimport { KanbanContext } from '../../App';\r\n\r\nconst KanbanBoard = () => {\r\n  const { data, groupingOption, sortingOption } = useContext(KanbanContext);\r\n  const { tickets, users } = data;\r\n\r\n  console.log(groupingOption)\r\n  // Implement logic to group and sort tickets based on options\r\n  const sortTickets = (ticketsToSort) => {\r\n    switch (sortingOption) {\r\n      case 'status':\r\n        // Group by status\r\n        return tickets.reduce((groupedTickets, ticket) => {\r\n          const status = ticket.status;\r\n          groupedTickets[status] = groupedTickets[status] || [];\r\n          groupedTickets[status].push(ticket);\r\n          return groupedTickets;\r\n        }, {});\r\n      case 'user':\r\n        // Group by user\r\n        return tickets.reduce((groupedTickets, ticket) => {\r\n          const userId = ticket.userId;\r\n          groupedTickets[userId] = groupedTickets[userId] || [];\r\n          groupedTickets[userId].push(ticket);\r\n          return groupedTickets;\r\n        }, {});\r\n      case 'priority':\r\n        // Group by priority\r\n          return ticketsToSort.sort((a, b) => b.priority - a.priority);\r\n      default:\r\n        return ticketsToSort; // Default to an empty object if no valid grouping option\r\n    }\r\n  };\r\n\r\n  // Get the grouped tickets based on the current grouping option\r\n  const sortedTickets = sortTickets(tickets)\r\n\r\n  const todoTickets = tickets.filter((ticket) => ticket.status === 'Todo');\r\n  const inProgressTickets = tickets.filter((ticket) => ticket.status === 'In progress');\r\n  const doneTickets = tickets.filter((ticket) => ticket.status === 'Done');\r\n  return (\r\n    <div className=\"kanban-board\">\r\n      {/* Render columns based on grouped and sorted tickets */}\r\n      {Object.entries(groupedTickets).map(([groupTitle, groupTickets]) => (\r\n        <KanbanColumn key={groupTitle} title={groupTitle} tickets={(groupTickets)} users={users} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanBoard;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC;AACA,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAO,gCAAgC;AAGvC,SAASC,aAAa,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC,IAAI;IAAEC,cAAc;IAAEC;EAAc,CAAC,GAAGT,UAAU,CAACE,aAAa,CAAC;EACzE,MAAM;IAAEQ,OAAO;IAAEC;EAAM,CAAC,GAAGJ,IAAI;EAE/BK,OAAO,CAACC,GAAG,CAACL,cAAc,CAAC;EAC3B;EACA,MAAMM,WAAW,GAAIC,aAAa,IAAK;IACrC,QAAQN,aAAa;MACnB,KAAK,QAAQ;QACX;QACA,OAAOC,OAAO,CAACM,MAAM,CAAC,CAACC,cAAc,EAAEC,MAAM,KAAK;UAChD,MAAMC,MAAM,GAAGD,MAAM,CAACC,MAAM;UAC5BF,cAAc,CAACE,MAAM,CAAC,GAAGF,cAAc,CAACE,MAAM,CAAC,IAAI,EAAE;UACrDF,cAAc,CAACE,MAAM,CAAC,CAACC,IAAI,CAACF,MAAM,CAAC;UACnC,OAAOD,cAAc;QACvB,CAAC,EAAE,CAAC,CAAC,CAAC;MACR,KAAK,MAAM;QACT;QACA,OAAOP,OAAO,CAACM,MAAM,CAAC,CAACC,cAAc,EAAEC,MAAM,KAAK;UAChD,MAAMG,MAAM,GAAGH,MAAM,CAACG,MAAM;UAC5BJ,cAAc,CAACI,MAAM,CAAC,GAAGJ,cAAc,CAACI,MAAM,CAAC,IAAI,EAAE;UACrDJ,cAAc,CAACI,MAAM,CAAC,CAACD,IAAI,CAACF,MAAM,CAAC;UACnC,OAAOD,cAAc;QACvB,CAAC,EAAE,CAAC,CAAC,CAAC;MACR,KAAK,UAAU;QACb;QACE,OAAOF,aAAa,CAACO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,QAAQ,GAAGF,CAAC,CAACE,QAAQ,CAAC;MAChE;QACE,OAAOV,aAAa;MAAE;IAC1B;EACF,CAAC;;EAED;EACA,MAAMW,aAAa,GAAGZ,WAAW,CAACJ,OAAO,CAAC;EAE1C,MAAMiB,WAAW,GAAGjB,OAAO,CAACkB,MAAM,CAAEV,MAAM,IAAKA,MAAM,CAACC,MAAM,KAAK,MAAM,CAAC;EACxE,MAAMU,iBAAiB,GAAGnB,OAAO,CAACkB,MAAM,CAAEV,MAAM,IAAKA,MAAM,CAACC,MAAM,KAAK,aAAa,CAAC;EACrF,MAAMW,WAAW,GAAGpB,OAAO,CAACkB,MAAM,CAAEV,MAAM,IAAKA,MAAM,CAACC,MAAM,KAAK,MAAM,CAAC;EACxE,oBACEf,OAAA;IAAK2B,SAAS,EAAC,cAAc;IAAAC,QAAA,EAE1BC,MAAM,CAACC,OAAO,CAACjB,cAAc,CAAC,CAACkB,GAAG,CAAC,CAAC,CAACC,UAAU,EAAEC,YAAY,CAAC,kBAC7DjC,OAAA,CAACH,YAAY;MAAkBqC,KAAK,EAAEF,UAAW;MAAC1B,OAAO,EAAG2B,YAAc;MAAC1B,KAAK,EAAEA;IAAM,GAArEyB,UAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA6D,CAC3F;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpC,EAAA,CA9CID,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AAgDjB,eAAeA,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}