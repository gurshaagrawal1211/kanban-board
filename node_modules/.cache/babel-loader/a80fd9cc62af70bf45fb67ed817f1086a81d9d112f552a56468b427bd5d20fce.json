{"ast":null,"code":"var _jsxFileName = \"D:\\\\kanban-board\\\\src\\\\components\\\\KanbanColumn\\\\KanbanColumn.jsx\";\n// KanbanColumn.js\nimport React from 'react';\n// import KanbanCard from './KanbanCard';\nimport KanbanCard from '../KanbanCard/KanbanCard';\nimport '../KanbanColumn/KanbanColumn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanColumn = ({\n  title,\n  tickets,\n  users,\n  groupingOption\n}) => {\n  var _users$find;\n  const filteredTickets = tickets.filter(ticket => {\n    if (groupingOption === 'user') {\n      const user = users.find(user => user.id === title);\n      return user && ticket.userId === user.id;\n    } else {\n      return ticket.title === title;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: groupingOption === 'user' ? `${(_users$find = users.find(user => user.id === title)) === null || _users$find === void 0 ? void 0 : _users$find.name} (${filteredTickets.length})` : `${title} (${filteredTickets.length})`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), filteredTickets.map(ticket => {\n      const user = users.find(user => user.id === ticket.userId);\n\n      // Ensure that the ticket has a userId and the corresponding user is found\n      if (ticket.userId && user) {\n        return /*#__PURE__*/_jsxDEV(KanbanCard, {\n          ticket: ticket,\n          user: user\n        }, ticket.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 18\n        }, this);\n      }\n\n      // Handle the case where userId is missing or the user is not found\n      return null;\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = KanbanColumn;\nexport default KanbanColumn;\nvar _c;\n$RefreshReg$(_c, \"KanbanColumn\");","map":{"version":3,"names":["React","KanbanCard","jsxDEV","_jsxDEV","KanbanColumn","title","tickets","users","groupingOption","_users$find","filteredTickets","filter","ticket","user","find","id","userId","className","children","name","length","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["D:/kanban-board/src/components/KanbanColumn/KanbanColumn.jsx"],"sourcesContent":["// KanbanColumn.js\r\nimport React from 'react';\r\n// import KanbanCard from './KanbanCard';\r\nimport KanbanCard from '../KanbanCard/KanbanCard';\r\nimport '../KanbanColumn/KanbanColumn.css'\r\n\r\nconst KanbanColumn = ({ title, tickets, users, groupingOption }) => {\r\n\r\n  const filteredTickets = tickets.filter((ticket) => {\r\n    if (groupingOption === 'user') {\r\n      const user = users.find((user) => user.id === title);\r\n      return user && ticket.userId === user.id;\r\n    } else {\r\n      return ticket.title === title;\r\n    }\r\n  });\r\n  return (\r\n    \r\n    <div className=\"kanban-column\">\r\n    \r\n    <h2>\r\n        {groupingOption === 'user'\r\n          ? `${users.find((user) => user.id === title)?.name} (${filteredTickets.length})`\r\n          : `${title} (${filteredTickets.length})`}\r\n      </h2>\r\n      {/* Render cards based on tickets */}\r\n      {filteredTickets.map((ticket) => {\r\n        const user = users.find((user) => user.id === ticket.userId);\r\n        \r\n\r\n        // Ensure that the ticket has a userId and the corresponding user is found\r\n        if (ticket.userId && user) {\r\n          return <KanbanCard key={ticket.id} ticket={ticket} user={user} />;\r\n        }\r\n\r\n        // Handle the case where userId is missing or the user is not found\r\n        return null;\r\n      })}\r\n      \r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default KanbanColumn;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAO,kCAAkC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK;EAAEC,OAAO;EAAEC,KAAK;EAAEC;AAAe,CAAC,KAAK;EAAA,IAAAC,WAAA;EAElE,MAAMC,eAAe,GAAGJ,OAAO,CAACK,MAAM,CAAEC,MAAM,IAAK;IACjD,IAAIJ,cAAc,KAAK,MAAM,EAAE;MAC7B,MAAMK,IAAI,GAAGN,KAAK,CAACO,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKV,KAAK,CAAC;MACpD,OAAOQ,IAAI,IAAID,MAAM,CAACI,MAAM,KAAKH,IAAI,CAACE,EAAE;IAC1C,CAAC,MAAM;MACL,OAAOH,MAAM,CAACP,KAAK,KAAKA,KAAK;IAC/B;EACF,CAAC,CAAC;EACF,oBAEEF,OAAA;IAAKc,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAE9Bf,OAAA;MAAAe,QAAA,EACKV,cAAc,KAAK,MAAM,GACrB,IAAAC,WAAA,GAAEF,KAAK,CAACO,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKV,KAAK,CAAC,cAAAI,WAAA,uBAAvCA,WAAA,CAAyCU,IAAK,KAAIT,eAAe,CAACU,MAAO,GAAE,GAC7E,GAAEf,KAAM,KAAIK,eAAe,CAACU,MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EAEJd,eAAe,CAACe,GAAG,CAAEb,MAAM,IAAK;MAC/B,MAAMC,IAAI,GAAGN,KAAK,CAACO,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKH,MAAM,CAACI,MAAM,CAAC;;MAG5D;MACA,IAAIJ,MAAM,CAACI,MAAM,IAAIH,IAAI,EAAE;QACzB,oBAAOV,OAAA,CAACF,UAAU;UAAiBW,MAAM,EAAEA,MAAO;UAACC,IAAI,EAAEA;QAAK,GAAtCD,MAAM,CAACG,EAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA+B,CAAC;MACnE;;MAEA;MACA,OAAO,IAAI;IACb,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAGV,CAAC;AAACE,EAAA,GApCItB,YAAY;AAsClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}