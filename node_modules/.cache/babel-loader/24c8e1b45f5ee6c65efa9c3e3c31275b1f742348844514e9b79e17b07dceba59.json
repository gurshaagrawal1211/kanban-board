{"ast":null,"code":"var _jsxFileName = \"D:\\\\kanban-board\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect, createContext } from 'react';\nimport KanbanBoard from './components/KanbanBoard/KanbanBoard';\nimport './App.css';\nimport DisplayButton from './components/DisplayButton/DisplayButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const KanbanContext = /*#__PURE__*/createContext();\nconst App = () => {\n  _s();\n  const [data, setData] = useState({\n    tickets: [],\n    users: []\n  });\n  const [displayOptionsVisible, setDisplayOptionsVisible] = useState(false);\n  const [groupingOption, setGroupingOption] = useState('status');\n  const [orderingOption, setOrderingOption] = useState('priority');\n  useEffect(() => {\n    // Fetch data from the API and setData\n    // This is a placeholder, you should replace it with your actual API call\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment ');\n        const jsonData = await response.json();\n        setData(jsonData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleDisplayButtonClick = () => {\n    setDisplayOptionsVisible(!displayOptionsVisible);\n  };\n  const handleGroupingOptionChange = option => {\n    setGroupingOption(option);\n  };\n  const handleOrderingOptionChange = option => {\n    setOrderingOption(option);\n  };\n  const contextValue = {\n    data,\n    groupingOption,\n    setGroupingOption,\n    orderingOption,\n    setOrderingOption\n  };\n  const saveToLocalStorage = (key, data) => {\n    localStorage.setItem(key, JSON.stringify(data));\n  };\n  const getFromLocalStorage = key => {\n    const data = localStorage.getItem(key);\n    return data ? JSON.parse(data) : null;\n  };\n  useEffect(() => {\n    // Fetch data from local storage on component mount\n    console.log(\"Fetching data from local storage...\");\n    const savedData = getFromLocalStorage('kanban-board-data');\n    console.log('Saved data:', savedData);\n    if (savedData) {\n      console.log('Setting data:', savedData);\n      setData(savedData);\n    }\n  }, []);\n  useEffect(() => {\n    // Save data to local storage whenever it changes\n    saveToLocalStorage('kanban-board-data', data);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(KanbanContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"display-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDisplayButtonClick,\n            children: \"Display\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), displayOptionsVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-container-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Grouping\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: groupingOption,\n                onChange: e => handleGroupingOptionChange(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"status\",\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"user\",\n                  children: \"User\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"priority\",\n                  children: \"Priority\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-container-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Ordering\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: orderingOption,\n                onChange: e => handleOrderingOptionChange(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"priority\",\n                  children: \"Priority\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"title\",\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KanbanBoard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 6\n  }, this);\n};\n_s(App, \"o3JE9vwMwG9o5qVQIL2X6RWV1sk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createContext","KanbanBoard","DisplayButton","jsxDEV","_jsxDEV","KanbanContext","App","_s","data","setData","tickets","users","displayOptionsVisible","setDisplayOptionsVisible","groupingOption","setGroupingOption","orderingOption","setOrderingOption","fetchData","response","fetch","jsonData","json","error","console","handleDisplayButtonClick","handleGroupingOptionChange","option","handleOrderingOptionChange","contextValue","saveToLocalStorage","key","localStorage","setItem","JSON","stringify","getFromLocalStorage","getItem","parse","log","savedData","Provider","value","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/kanban-board/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect, createContext } from 'react';\n\nimport KanbanBoard from './components/KanbanBoard/KanbanBoard';\nimport './App.css';\nimport DisplayButton from './components/DisplayButton/DisplayButton';\n\nexport const KanbanContext = createContext();\n\nconst App = () => {\n  const [data, setData] = useState({\n    tickets: [],\n    users: [],\n  });\n  const [displayOptionsVisible, setDisplayOptionsVisible] = useState(false);\n  const [groupingOption, setGroupingOption] = useState('status');\n  const [orderingOption, setOrderingOption] = useState('priority');\n\n\n  useEffect(() => {\n    // Fetch data from the API and setData\n    // This is a placeholder, you should replace it with your actual API call\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment ');\n        const jsonData = await response.json();\n        setData(jsonData);\n       \n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\nconst handleDisplayButtonClick = () => {\n    setDisplayOptionsVisible(!displayOptionsVisible);\n  };\n\n  const handleGroupingOptionChange = (option) => {\n    \n    setGroupingOption(option);\n  };\n\n  const handleOrderingOptionChange = (option) => {\n    \n    setOrderingOption(option);\n  };\n  \n\n  const contextValue = {\n    data,\n    groupingOption,\n    setGroupingOption,\n    orderingOption,\n    setOrderingOption\n  };\n\n  const saveToLocalStorage = (key, data) => {\n  localStorage.setItem(key, JSON.stringify(data));\n};\n\nconst getFromLocalStorage = (key) => {\n  const data = localStorage.getItem(key);\n  return data ? JSON.parse(data) : null;\n};\n\n  useEffect(() => {\n    \n  // Fetch data from local storage on component mount\n  console.log(\"Fetching data from local storage...\")\n  const savedData = getFromLocalStorage('kanban-board-data');\n  console.log('Saved data:', savedData);\n  if (savedData) {\n    console.log('Setting data:', savedData);\n    setData(savedData);\n  }\n}, []);\n\nuseEffect(() => {\n  // Save data to local storage whenever it changes\n  saveToLocalStorage('kanban-board-data', data);\n}, [data]);\n\n\n  return (\n     <KanbanContext.Provider value={contextValue}>\n       <div className=\"app\">\n        <header>\n          <div className=\"display-container\">\n            <button onClick={handleDisplayButtonClick}>Display</button>\n            {displayOptionsVisible && (\n              <div className=\"dropdown-container\">\n              <div className=\"dropdown-container-content\">\n                <h4>Grouping</h4>\n                <select\n                  value={groupingOption}\n                  onChange={(e) => handleGroupingOptionChange(e.target.value)}\n                >\n                  <option value=\"status\">Status</option>\n                  <option value=\"user\">User</option>\n                  <option value=\"priority\">Priority</option>\n                  {/* Add more options as needed */}\n                </select>\n              </div>\n\n\n              <div className=\"dropdown-container-content\">\n                <h4>Ordering</h4>\n                <select\n                  value={orderingOption}\n                  onChange={(e) => handleOrderingOptionChange(e.target.value)}\n                >\n                  <option value=\"priority\">Priority</option>\n                  <option value=\"title\">Title</option>\n                  {/* Add more options as needed */}\n                </select>\n              </div>\n              \n              </div>\n            )}\n          </div>\n        </header>\n        <KanbanBoard />\n      </div>\n     </KanbanContext.Provider>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}